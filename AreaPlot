##### Python Implementation #####
##### Jenna R. Grimshaw #####
##### 09-14-18 #####

# Goals
# 1. Find a dataset
# 2. Using pandas, numby, etc to create an area plot
# 3. Must use argparse for input commands, figure legend, colors, etc
# 4. Must save plot as a .png file

###### Import modules #####
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import argparse

print("Importing modules...")

###### Construct argument parses and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-i", "--input", required=True, help = "name of csv file")
ap.add_argument("-o", "--output", required=True, help = "name of output file")
ap.add_argument("-t", "--title", required=True, help = "Title of AreaPlot")
ap.add_argument("-x", "--xlabel", required=True, help= "Label for x-axis")
ap.add_argument("-y", "--ylabel", required=True, help= "Label for y-axis")
ap.add_argument("-l", "--location", required=False, nargs="?", const=0, type=int, help="Location of legend on graph")
ap.add_argument("-d", "--dpi", required=False, nargs="?", const=300, type=int, help="DPI resolution for graph")
args = vars(ap.parse_args())

##### Import csv file #####
#data = pd.read_csv("aVan_Divergence.csv")
data = pd.read_csv(args["input"])
print(data[:5])

##### Create stacked area plot
labels = ["SINE", "LTR", "LINE", "DNA", "RC"] #Variables for legend
plt.stackplot(data["range"], data["SINE"], data["LTR"], data["LINE"], data["DNA"], data["RC"], labels=labels) #Create areaplot with 1st variable the X-axis, all other variables will be plotted


xlabel=args["xlabel"].replace("_", " ") #Get rid of "_" and replace with a space
plt.xlabel(xlabel) #Label for x-axis
ylabel=args["ylabel"].replace("_", " ") #Get rid of "_" and replace with a space
plt.ylabel(ylabel) #Label for y-axis 

title=args["title"].replace("_", " ") #Get rid of "_ " and replace with a space
plt.title(title) #Title for graph
	

plt.legend() # Show the graph
leg = plt.legend(loc=args["location"], ncol=2, fontsize="small") #Formatting the legend

#### Location legend
# loc = 0 (default)
# 0 = best
# 1 = upper right
# 2 = upper left
# 3 = lower left
# 4 = lower right
# 5 = right
# 6 = center left
# 7 = center right
# 8 = lower center
# 9 = upper center
# 10 = center

###### Location Number of columns
# ncol = 1 (default)

###### Font size
# fontsize = ‘xx-small’, ‘x-small’, ‘small’, ‘medium’, ‘large’, ‘x-large’, ‘xx-large’


plt.savefig(args["output"], dpi=args["dpi"]) #Save the graph
plt.show() #Show the completed graph on your screen
